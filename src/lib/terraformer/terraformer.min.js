(function(e,t){typeof module=="object"&&typeof module.exports=="object"&&(exports=module.exports=t()),typeof define=="function"&&define.amd&&define(t),typeof window=="object"&&(e.Terraformer=t())})(this,function(){function o(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function u(e,t){t=t||{};var n=Object.keys(t);for(var r in n)e[n[r]]=t[n[r]];return e}function a(e){switch(e.type){case"Point":return[e.coordinates[0],e.coordinates[1],e.coordinates[0],e.coordinates[1]];case"MultiPoint":return c(e.coordinates);case"LineString":return c(e.coordinates);case"MultiLineString":return f(e.coordinates);case"Polygon":return f(e.coordinates);case"MultiPolygon":return l(e.coordinates);case"Feature":return a(e.geometry);case"FeatureCollection":return h(e);case"GeometryCollection":return p(e);default:throw new Error("Unknown type: "+e.type)}}function f(e){var t=null,n=null,r=null,i=null;for(var s=0;s<e.length;s++){var o=e[s];for(var u=0;u<o.length;u++){var a=o[u],f=a[0],l=a[1];t===null?t=f:f<t&&(t=f),n===null?n=f:f>n&&(n=f),r===null?r=l:l<r&&(r=l),i===null?i=l:l>i&&(i=l)}}return[t,r,n,i]}function l(e){var t=null,n=null,r=null,i=null;for(var s=0;s<e.length;s++){var o=e[s];for(var u=0;u<o.length;u++){var a=o[u];for(var f=0;f<a.length;f++){var l=a[f],c=l[0],h=l[1];t===null?t=c:c<t&&(t=c),n===null?n=c:c>n&&(n=c),r===null?r=h:h<r&&(r=h),i===null?i=h:h>i&&(i=h)}}}return[t,r,n,i]}function c(e){var t=null,n=null,r=null,i=null;for(var s=0;s<e.length;s++){var o=e[s],u=o[0],a=o[1];t===null?t=u:u<t&&(t=u),n===null?n=u:u>n&&(n=u),r===null?r=a:a<r&&(r=a),i===null?i=a:a>i&&(i=a)}return[t,r,n,i]}function h(e){var t=[],n;for(var r=e.features.length-1;r>=0;r--)n=a(e.features[r].geometry),t.push([n[0],n[1]]),t.push([n[2],n[3]]);return c(t)}function p(e){var t=[],n;for(var r=e.geometries.length-1;r>=0;r--)n=a(e.geometries[r]),t.push([n[0],n[1]]),t.push([n[2],n[3]]);return c(t)}function d(e){return e*n}function v(e){return e*r}function m(e,t){for(var n=0;n<e.geometries.length;n++)e.geometries[n].geometry=y(e.features[n].geometry,t);return e}function g(e,t){for(var n=0;n<e.features.length;n++)e.features[n].geometry=y(e.features[n].geometry,t);return e}function y(e,t){for(var n=0;n<e.length;n++)typeof e[n][0]=="number"&&(e[n]=t(e[n])),typeof e[n]=="object"&&(e[n]=y(e[n],t));return e}function b(e){var n=e[0],r=e[1];return[d(n/t)-Math.floor((d(n/t)+180)/360)*360,d(Math.PI/2-2*Math.atan(Math.exp(-1*r/t)))]}function w(e){var n=e[0],r=Math.max(Math.min(e[1],89.99999),-89.99999);return[v(n)*t,t/2*Math.log((1+Math.sin(v(r)))/(1-Math.sin(v(r))))]}function E(e,t){return e.type==="Point"?e.coordinates=t(e.coordinates):e.type==="Feature"?e.geometry=E(e,t):e.type==="FeatureCollection"?e.features=g(e,t):e.type==="GeometryCollection"?e.geometries=m(e,t):e.coordinates=y(e.coordinates,t),t===w&&(e.crs=i),t===b&&delete e.crs,e}function S(e){return E(e,w)}function x(e){return E(e,b)}function T(e,t){return e<t?-1:e>t?1:0}function N(e,t,n){return T((t[0]-e[0])*(n[1]-e[1])-(n[0]-e[0])*(t[1]-e[1]),0)}function C(e,t){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function k(e,t){var n=t;for(var r in e){var i=N(t,n,e[r]);if(i===-1||i===0&&C(t,e[r])>C(t,n))n=e[r]}return n}function L(e){function t(e,t){return e[0]-t[0]>e[1]-t[1]?1:e[0]-t[0]<e[1]-t[1]?-1:0}if(e.length===0)return[];if(e.length===1)return e;var n=[e.sort(t)[0]];for(var r=0;r<n.length;r++){var i=k(e,n[r]);i!==n[0]&&n.push(i)}return n}function A(e,t){var n=!1;for(var r=-1,i=e.length,s=i-1;++r<i;s=r)(e[r][1]<=t[1]&&t[1]<e[s][1]||e[s][1]<=t[1]&&t[1]<e[r][1])&&t[0]<(e[s][0]-e[r][0])*(t[1]-e[r][1])/(e[s][1]-e[r][1])+e[r][0]&&(n=!0);return n}function O(e,t){if(e&&e.length){if(e.length===1)return A(e[0],t);if(A(e[0],t)){for(var n=1;n<e.length;n++)if(A(e[n],t))return!1;return!0}return!1}return!1}function _(e){if(e)switch(e.type){case"Point":return new D(e);case"MultiPoint":return new P(e);case"LineString":return new H(e);case"MultiLineString":return new B(e);case"Polygon":return new j(e);case"MultiPolygon":return new F(e);case"Feature":return new I(e);case"FeatureCollection":return new q(e);case"GeometryCollection":return new R(e);default:throw new Error("Unknown type: "+e.type)}}function D(e){var t=Array.prototype.slice.call(arguments);if(e&&e.type==="Point"&&e.coordinates)o(this,e);else if(e&&Array.isArray(e))this.coordinates=e;else{if(!(t.length>=2))throw"Terraformer: invalid input for Terraformer.Point";this.coordinates=t}this.type="Point",this.__defineGetter__("bbox",function(){return a(this)})}function P(e){if(e&&e.type==="MultiPoint"&&e.coordinates)o(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.MultiPoint";this.coordinates=e}this.type="MultiPoint",this.__defineGetter__("bbox",function(){return a(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function H(e){if(e&&e.type==="LineString"&&e.coordinates)o(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.LineString";this.coordinates=e}this.type="LineString",this.__defineGetter__("bbox",function(){return a(this)})}function B(e){if(e&&e.type==="MultiLineString"&&e.coordinates)o(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.MultiLineString";this.coordinates=e}this.type="MultiLineString",this.__defineGetter__("bbox",function(){return a(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function j(e){if(e&&e.type==="Polygon"&&e.coordinates)o(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.Polygon";this.coordinates=e}this.type="Polygon",this.__defineGetter__("bbox",function(){return a(this)})}function F(e){if(e&&e.type==="MultiPolygon"&&e.coordinates)o(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.MultiPolygon";this.coordinates=e}this.type="MultiPolygon",this.__defineGetter__("bbox",function(){return a(this)}),this.__defineGetter__("length",function(){return this.coordinates?this.coordinates.length:0})}function I(e){if(e&&e.type==="Feature"&&e.geometry)o(this,e);else{if(!(e&&e.type&&e.coordinates))throw"Terraformer: invalid input for Terraformer.Feature";this.geometry=e}this.type="Feature",this.__defineGetter__("bbox",function(){return a(this)})}function q(e){if(e&&e.type==="FeatureCollection"&&e.features)o(this,e);else{if(!Array.isArray(e))throw"Terraformer: invalid input for Terraformer.FeatureCollection";this.features=e}this.type="FeatureCollection",this.__defineGetter__("length",function(){return this.features?this.features.length:0}),this.__defineGetter__("bbox",function(){return a(this)})}function R(e){if(e&&e.type==="GeometryCollection"&&e.geometries)o(this,e);else if(Array.isArray(e))this.geometries=e;else{if(!e.coordinates||!e.type)throw"Terraformer: invalid input for Terraformer.GeometryCollection";this.type="GeometryCollection",this.geometries=[e]}this.type="GeometryCollection",this.__defineGetter__("length",function(){return this.geometries?this.geometries.length:0}),this.__defineGetter__("bbox",function(){return a(this)})}function U(e,t,n){var r=w(e),i=n||64,s=t||250,o={type:"Polygon",coordinates:[[]]};for(var u=1;u<=i;u++){var a=u*(360/i)*Math.PI/180;o.coordinates[0].push([r[0]+s*Math.cos(a),r[1]+s*Math.sin(a)])}return x(o)}function z(e,t,n){var r=n||64,i=t||250;if(!e||e.length<2||!i||!r)throw new Error("Terraformer: missing parameter for Terraformer.Circle");o(this,new I({type:"Feature",geometry:U(e,i,r),properties:{radius:i,center:e,steps:r}})),this.__defineGetter__("bbox",function(){return a(this)}),this.__defineGetter__("radius",function(){return this.properties.radius}),this.__defineSetter__("radius",function(e){this.properties.radius=e,this.recalculate()}),this.__defineGetter__("steps",function(){return this.properties.steps}),this.__defineSetter__("steps",function(e){this.properties.steps=e,this.recalculate()}),this.__defineGetter__("center",function(){return this.properties.center}),this.__defineSetter__("center",function(e){this.properties.center=e,this.recalculate()})}var e={},t=6378137,n=57.29577951308232,r=.017453292519943,i={type:"link",properties:{href:"http://spatialreference.org/ref/sr-org/6928/ogcwkt/",type:"ogcwkt"}},s={type:"link",properties:{href:"http://spatialreference.org/ref/epsg/4326/ogcwkt/",type:"ogcwkt"}},M=["length"];return _.prototype={toMercator:function(){return S(this)},toGeographic:function(){return x(this)},envelope:function(){var e=a(this);return{x:e[0],y:e[1],w:Math.abs(e[0]-e[2]),h:Math.abs(e[1]-e[3])}},convexHull:function(){var e=[],t,n;if(this.type==="Point")return this.coordinates&&this.coordinates.length>0?[this.coordinates]:[];if(this.type==="LineString"||this.type==="MultiPoint"){if(!(this.coordinates&&this.coordinates.length>0))return[];e=this.coordinates}else if(this.type==="Polygon"||this.type==="MultiLineString"){if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)e=e.concat(this.coordinates[t])}else{if(this.type!=="MultiPolygon")throw new Error("Unable to get convex hull of "+this.type);if(!(this.coordinates&&this.coordinates.length>0))return[];for(t=0;t<this.coordinates.length;t++)for(n=0;n<this.coordinates[t].length;n++)e=e.concat(this.coordinates[t][n])}return L(e)},toJSON:function(){var e={};for(var t in this)this.hasOwnProperty(t)&&this[t]&&M.indexOf(t)&&(e[t]=this[t]);return e},toJson:function(){return JSON.stringify(this)}},D.prototype=new _,D.prototype.constructor=D,P.prototype=new _,P.prototype.constructor=P,P.prototype.forEach=function(e){for(var t=0;t<this.length;t++)e.apply(this,[this.coordinates[t],t,this.coordinates]);return this},P.prototype.addPoint=function(e){return this.coordinates.push(e),this},P.prototype.insertPoint=function(e,t){return this.coordinates.splice(t,0,e),this},P.prototype.removePoint=function(e){return typeof e=="number"?this.coordinates.splice(e,1):this.coordinates.splice(this.coordinates.indexOf(e),1),this},P.prototype.get=function(e){return new D(this.coordinates[e])},H.prototype=new _,H.prototype.constructor=H,H.prototype.addVertex=function(e){return this.coordinates.push(e),this},H.prototype.insertVertex=function(e,t){return this.coordinates.splice(t,0,e),this},H.prototype.removeVertex=function(e){return this.coordinates.splice(e,1),this},B.prototype=new _,B.prototype.constructor=B,B.prototype.forEach=function(e){for(var t=0;t<this.coordinates.length;t++)e.apply(this,[this.coordinates[t],t,this.coordinates])},B.prototype.get=function(e){return new H(this.coordinates[e])},j.prototype=new _,j.prototype.constructor=j,j.prototype.addVertex=function(e){return this.coordinates[0].push(e),this},j.prototype.insertVertex=function(e,t){return this.coordinates[0].splice(t,0,e),this},j.prototype.removeVertex=function(e){return this.coordinates[0].splice(e,1),this},j.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");return O(this.coordinates,e.coordinates)},F.prototype=new _,F.prototype.constructor=F,F.prototype.forEach=function(e){for(var t=0;t<this.coordinates.length;t++)e.apply(this,[this.coordinates[t],t,this.coordinates])},F.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");for(var t=0;t<this.coordinates.length;t++)if(O(this.coordinates[t],e.coordinates))return!0;return!1},F.prototype.get=function(e){return new j(this.coordinates[e])},I.prototype=new _,I.prototype.constructor=I,I.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");if(!this.geometry.type.match(/Polygon/))throw new Error("Only features contianing Polygons and MultiPolygons are supported");if(this.geometry.type==="MultiPolygon")for(var t=0;t<this.geometry.coordinates.length;t++)if(O(this.geometry.coordinates[t],e.coordinates))return!0;return this.geometry.type==="Polygon"?O(this.geometry.coordinates,e.coordinates):!1},q.prototype=new _,q.prototype.constructor=q,q.prototype.forEach=function(e){for(var t=0;t<this.features.length;t++)e.apply(this,[this.features[t],t,this.features])},q.prototype.get=function(e){var t;return this.forEach(function(n){n.id===e&&(t=n)}),new I(t)},R.prototype=new _,R.prototype.constructor=R,R.prototype.forEach=function(e){for(var t=0;t<this.geometries.length;t++)e.apply(this,[this.geometries[t],t,this.geometries])},R.prototype.get=function(e){return new _(this.geometries[e])},z.prototype=new _,z.prototype.constructor=z,z.prototype.recalculate=function(){return this.geometry=U(this.center,this.radius,this.steps),this},z.prototype.contains=function(e){if(e.type!=="Point")throw new Error("Only points are supported");return O(this.geometry.coordinates,e.coordinates)},e.Primitive=_,e.Point=D,e.MultiPoint=P,e.LineString=H,e.MultiLineString=B,e.Polygon=j,e.MultiPolygon=F,e.Feature=I,e.FeatureCollection=q,e.GeometryCollection=R,e.Circle=z,e.toMercator=S,e.toGeographic=x,e.Tools={},e.Tools.positionToMercator=w,e.Tools.positionToGeographic=b,e.Tools.applyConverter=E,e.Tools.toMercator=S,e.Tools.toGeographic=x,e.Tools.createCircle=U,e.Tools.calculateBounds=a,e.Tools.coordinatesContainPoint=A,e.Tools.polygonContainsPoint=O,e.Tools.convexHull=L,e.MercatorCRS=i,e.GeographicCRS=s,e});